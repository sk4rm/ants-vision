"""
This type stub file was generated by pyright.
"""

from .base import PaddleXPipelineWrapper, PipelineCLISubcommandExecutor

class PPStructureV3(PaddleXPipelineWrapper):
    def __init__(self, layout_detection_model_name=..., layout_detection_model_dir=..., layout_threshold=..., layout_nms=..., layout_unclip_ratio=..., layout_merge_bboxes_mode=..., chart_recognition_model_name=..., chart_recognition_model_dir=..., chart_recognition_batch_size=..., region_detection_model_name=..., region_detection_model_dir=..., doc_orientation_classify_model_name=..., doc_orientation_classify_model_dir=..., doc_unwarping_model_name=..., doc_unwarping_model_dir=..., text_detection_model_name=..., text_detection_model_dir=..., text_det_limit_side_len=..., text_det_limit_type=..., text_det_thresh=..., text_det_box_thresh=..., text_det_unclip_ratio=..., textline_orientation_model_name=..., textline_orientation_model_dir=..., textline_orientation_batch_size=..., text_recognition_model_name=..., text_recognition_model_dir=..., text_recognition_batch_size=..., text_rec_score_thresh=..., table_classification_model_name=..., table_classification_model_dir=..., wired_table_structure_recognition_model_name=..., wired_table_structure_recognition_model_dir=..., wireless_table_structure_recognition_model_name=..., wireless_table_structure_recognition_model_dir=..., wired_table_cells_detection_model_name=..., wired_table_cells_detection_model_dir=..., wireless_table_cells_detection_model_name=..., wireless_table_cells_detection_model_dir=..., table_orientation_classify_model_name=..., table_orientation_classify_model_dir=..., seal_text_detection_model_name=..., seal_text_detection_model_dir=..., seal_det_limit_side_len=..., seal_det_limit_type=..., seal_det_thresh=..., seal_det_box_thresh=..., seal_det_unclip_ratio=..., seal_text_recognition_model_name=..., seal_text_recognition_model_dir=..., seal_text_recognition_batch_size=..., seal_rec_score_thresh=..., formula_recognition_model_name=..., formula_recognition_model_dir=..., formula_recognition_batch_size=..., use_doc_orientation_classify=..., use_doc_unwarping=..., use_textline_orientation=..., use_seal_recognition=..., use_table_recognition=..., use_formula_recognition=..., use_chart_recognition=..., use_region_detection=..., **kwargs) -> None:
        ...
    
    def predict_iter(self, input, *, use_doc_orientation_classify=..., use_doc_unwarping=..., use_textline_orientation=..., use_seal_recognition=..., use_table_recognition=..., use_formula_recognition=..., use_chart_recognition=..., use_region_detection=..., layout_threshold=..., layout_nms=..., layout_unclip_ratio=..., layout_merge_bboxes_mode=..., text_det_limit_side_len=..., text_det_limit_type=..., text_det_thresh=..., text_det_box_thresh=..., text_det_unclip_ratio=..., text_rec_score_thresh=..., seal_det_limit_side_len=..., seal_det_limit_type=..., seal_det_thresh=..., seal_det_box_thresh=..., seal_det_unclip_ratio=..., seal_rec_score_thresh=..., use_wired_table_cells_trans_to_html=..., use_wireless_table_cells_trans_to_html=..., use_table_orientation_classify=..., use_ocr_results_with_table_cells=..., use_e2e_wired_table_rec_model=..., use_e2e_wireless_table_rec_model=..., **kwargs):
        ...
    
    def predict(self, input, *, use_doc_orientation_classify=..., use_doc_unwarping=..., use_textline_orientation=..., use_seal_recognition=..., use_table_recognition=..., use_formula_recognition=..., use_chart_recognition=..., use_region_detection=..., layout_threshold=..., layout_nms=..., layout_unclip_ratio=..., layout_merge_bboxes_mode=..., text_det_limit_side_len=..., text_det_limit_type=..., text_det_thresh=..., text_det_box_thresh=..., text_det_unclip_ratio=..., text_rec_score_thresh=..., seal_det_limit_side_len=..., seal_det_limit_type=..., seal_det_thresh=..., seal_det_box_thresh=..., seal_det_unclip_ratio=..., seal_rec_score_thresh=..., use_wired_table_cells_trans_to_html=..., use_wireless_table_cells_trans_to_html=..., use_table_orientation_classify=..., use_ocr_results_with_table_cells=..., use_e2e_wired_table_rec_model=..., use_e2e_wireless_table_rec_model=..., **kwargs): # -> list[Any]:
        ...
    
    def concatenate_markdown_pages(self, markdown_list):
        ...
    
    @classmethod
    def get_cli_subcommand_executor(cls): # -> PPStructureV3CLISubcommandExecutor:
        ...
    


class PPStructureV3CLISubcommandExecutor(PipelineCLISubcommandExecutor):
    @property
    def subparser_name(self): # -> Literal['pp_structurev3']:
        ...
    
    def execute_with_args(self, args): # -> None:
        ...
    


